services:
  app1:
    build: ./
    container_name: app1_container
    ports:
      - 50051:50051
      - 8081:8080
    networks:
      - app
    env_file: "./.env"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  app2:
    build: ./
    container_name: app2_container
    ports:
      - 50052:50051
      - 8082:8080
    networks:
      - app
    env_file: "./.env"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  app3:
    build: ./
    container_name: app3_container
    ports:
      - 50053:50050
      - 8083:8080
    networks:
      - app
    env_file: "./.env"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:latest
    container_name: postgres_container
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - app
    env_file: "./.env"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:latest
    container_name: redis_container
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379
    networks:
      - app
    env_file: "./.env"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  migrate:
    image: migrate/migrate
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app
    volumes:
      - ./database/migrations/:/database/migrations
    env_file: "./.env"
    command:
      [
        "-path",
        "/database/migrations/",
        "-database",
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable",
        "up",
      ]

  nginx:
    image: nginx
    container_name: nginx_container
    ports:
      - 80:80
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      app1:
        condition: service_started
      app2:
        condition: service_started
      app3:
        condition: service_started
    networks:
      - app

networks:
  app:

volumes:
  postgres_data:
  redis_data:
